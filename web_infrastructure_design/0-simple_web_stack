https://raw.githubusercontent.com/Lucasleg24/holbertonschool-system_engineering-devops/refs/heads/main/web_infrastructure_design/0-blog_post.png


This diagram illustrates the complete flow of a user request to the website. Here's an explanation of the different components:

Server: A physical or virtual machine that hosts all the components necessary for the website to function. In this case, it has the IP 8.8.8.8.

Domain Name: foobar.com is the domain name that allows users to access the website in a user-friendly way, without having to memorize the IP address.

DNS www Record: It's either a CNAME or A record that points www.foobar.com to the server's IP (8.8.8.8).

Web Server (Nginx): Handles incoming HTTP requests, serves static files, and acts as a reverse proxy to the application server.

Application Server: Executes the application code and processes business logic.

Database (MySQL): Stores all dynamic data for the website.

Communication: Uses HTTP/HTTPS protocol between the user's browser and the server.

The main issues with this architecture are:

SPOF (Single Point of Failure): If the server goes down, the entire site becomes inaccessible.
Maintenance Downtime: Any maintenance requires service interruption.
Limited Scalability: A single server can only handle a limited number of simultaneous requests.